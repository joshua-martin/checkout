/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

const documents = {
    "\n    mutation Login($email: String!) {\n        login(email: $email) {\n            success\n            message\n            user {\n                id\n                email\n                name\n                phone\n                addressLine\n                town\n                postcode\n            }\n        }\n    }\n": types.LoginDocument,
    "\n    mutation Register(\n        $email: String!\n        $name: String\n        $phone: String\n        $addressLine: String\n        $town: String\n        $postcode: String\n    ) {\n        register(\n            email: $email\n            name: $name\n            phone: $phone\n            addressLine: $addressLine\n            town: $town\n            postcode: $postcode\n        ) {\n            success\n            message\n            user {\n                id\n                email\n                name\n                phone\n                addressLine\n                town\n                postcode\n            }\n        }\n    }\n": types.RegisterDocument,
    "\n    query GetItems {\n        items {\n            id\n            title\n            seller\n            price\n            image\n            delivery {\n                id\n                title\n                price\n                default\n            }\n        }\n    }\n": types.GetItemsDocument,
    "\n    query getCode($code: String!) {\n        discountCode(code: $code) {\n            id\n            code\n            discount\n            type\n        }\n    }\n": types.GetCodeDocument,
};

export function graphql(source: "\n    mutation Login($email: String!) {\n        login(email: $email) {\n            success\n            message\n            user {\n                id\n                email\n                name\n                phone\n                addressLine\n                town\n                postcode\n            }\n        }\n    }\n"): (typeof documents)["\n    mutation Login($email: String!) {\n        login(email: $email) {\n            success\n            message\n            user {\n                id\n                email\n                name\n                phone\n                addressLine\n                town\n                postcode\n            }\n        }\n    }\n"];
export function graphql(source: "\n    mutation Register(\n        $email: String!\n        $name: String\n        $phone: String\n        $addressLine: String\n        $town: String\n        $postcode: String\n    ) {\n        register(\n            email: $email\n            name: $name\n            phone: $phone\n            addressLine: $addressLine\n            town: $town\n            postcode: $postcode\n        ) {\n            success\n            message\n            user {\n                id\n                email\n                name\n                phone\n                addressLine\n                town\n                postcode\n            }\n        }\n    }\n"): (typeof documents)["\n    mutation Register(\n        $email: String!\n        $name: String\n        $phone: String\n        $addressLine: String\n        $town: String\n        $postcode: String\n    ) {\n        register(\n            email: $email\n            name: $name\n            phone: $phone\n            addressLine: $addressLine\n            town: $town\n            postcode: $postcode\n        ) {\n            success\n            message\n            user {\n                id\n                email\n                name\n                phone\n                addressLine\n                town\n                postcode\n            }\n        }\n    }\n"];
export function graphql(source: "\n    query GetItems {\n        items {\n            id\n            title\n            seller\n            price\n            image\n            delivery {\n                id\n                title\n                price\n                default\n            }\n        }\n    }\n"): (typeof documents)["\n    query GetItems {\n        items {\n            id\n            title\n            seller\n            price\n            image\n            delivery {\n                id\n                title\n                price\n                default\n            }\n        }\n    }\n"];
export function graphql(source: "\n    query getCode($code: String!) {\n        discountCode(code: $code) {\n            id\n            code\n            discount\n            type\n        }\n    }\n"): (typeof documents)["\n    query getCode($code: String!) {\n        discountCode(code: $code) {\n            id\n            code\n            discount\n            type\n        }\n    }\n"];

export function graphql(source: string): unknown;
export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;